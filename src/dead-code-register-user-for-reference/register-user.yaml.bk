AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'MrJohnny'

# Settings
Globals:
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
  Function:
    Timeout: 10
    Environment:
      Variables:
        ENV: !Ref ENV
        UserPoolId: !Ref UserPoolId
        UserPoolClientId: !Ref UserPoolClientId

# Variable declaration
Parameters:
  ENV:
    Type: String
    Default: "prod"
  UserPoolId:
    Type: String
    Default: "us-east-1_suw91F9jY"
  UserPoolClientId:
    Type: String
    Default: "1uoqd91vkvqdllhjc73anurkqs"

Resources:
  # Api Gateway
  BookingUserServiceRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: staging
      Name: BookingUserServiceRestApi

  # Lambda Functions
  RegisterTelephoneNumberFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: RegisterTelephoneNumber/
      Handler: app.handler
      Runtime: nodejs14.x
      Events:
        RegisterTelephoneNumberFunctionEvent:
          Type: Api
          Properties:
              Path: /register-telephone
              Method: POST
              RestApiId:
                Ref: BookingUserServiceRestApi
  PreSignupFunction: 
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: PreSignup/
      Handler: app.handler
      Runtime: nodejs14.x

  # User Pool
  UserPoolStaging:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: booking-app-user-pool--staging
      LambdaConfig:
        PreSignUp: !GetAtt PreSignupFunction.Arn
      Schema:
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: false
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: false
        - Name: phone_number
          AttributeDataType: String
          Mutable: false
          Required: true
        - Name:  confirmationCode
          AttributeDataType: String
          Mutable: true
          Required: false

  UserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: !Sub booking-app-user-client--staging
      GenerateSecret: false
      UserPoolId: !Ref UserPoolStaging

  IdentityPool:
    Type: "AWS::Cognito::IdentityPool"
    Properties:
      IdentityPoolName: booking-app-identity-pool--staging
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders: 
        - ClientId: !Ref UserPoolClient
          ProviderName: !GetAtt UserPoolStaging.ProviderName

  # Deployments
  Deployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref BookingUserServiceRestApi
      Description: Staging deployment

  UserPoolLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt PreSignupFunction.Arn
      Action: lambda:invokeFunction
      Principal: cognito-idp.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:cognito-idp:'
          - !Ref 'AWS::Region'
          - ':'
          - !Ref 'AWS::AccountId'
          - ':'
          - userpool/*
